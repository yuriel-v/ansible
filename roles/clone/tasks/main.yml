---
# tasks file for clone
- name: Determine OS
  import_tasks: 'parse_os.yml'

- name: Do Linux routines
  when: global_os == 'linux'
  block:
    - name: Gather distro name fact
      setup:
        filter: "ansible_distribution"
    
    - name: Gather environment variables fact
      setup:
        filter: ansible_env

    - name: "Template greeting to host"
      become: yes
      template:
        src: greeting.sh.j2
        dest: '{{ "/etc/update-motd.d/99-greeting" if ansible_distribution | lower == "ubuntu" else "/etc/profile.d/greeting.sh" }}' 
        mode: '0755'

    - name: "Set hostname"
      hostname:
        name: "{{ global_vm_hostname }}"

    - name: "Set .bashrc for all users"
      template:
        src: "bashrc-{{ ansible_distribution | lower }}.j2"
        dest: "{{ global_bashrc_path }}"
      loop:
        - '/etc/skel/.bashrc'
        - '{{ ansible_env.HOME }}/.bashrc'
      loop_control:
        loop_var: global_bashrc_path

    - name: "Set .bashrc for root user"
      become: yes
      vars:
        bashrc_user: 'root'
      template:
        src: "bashrc-{{ ansible_distribution | lower }}.j2"
        dest: '/root/.bashrc'

    - name: Update and upgrade packages on Ubuntu
      become: yes
      when: ansible_distribution | lower == "ubuntu"
      block:
        - name: Warn user about long task
          debug:
            msg: "Warning: Ansible will now update apt cache and upgrade all the packages it can. This might take a while!"

        - name: Update apt cache and upgrade all packages
          apt:
            upgrade: 'safe'
            update_cache: yes
    
    - name: Upgrade all packages on CentOS
      become: yes
      when: ansible_distribution | lower == "centos"
      block:
        - name: Warn user about long task
          debug:
            msg: "Warning: Ansible will now upgrade all the packages it can. This might take a while!"
        
        - name: Upgrade all packages, except Kernel
          yum:
            name: '*'
            state: latest
            exclude: kernel*
